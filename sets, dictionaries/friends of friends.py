# Теория шести рукопожатий — социологическая теория,
# согласно которой любые два человека на Земле разделены не более,
# чем пятью уровнями общих знакомых (и, соответственно, шестью уровнями связей).
# Формальная математическая формулировка теории: диаметр графа знакомств не превышает 6.
# Мы не станем так сильно углубляться в дружественные связи и пока нам хватит только двух уровней.
# Напишите программу, которая по списку дружественных пар для каждого человека определяет список «друзей 2-го уровня».

# Формат ввода
# В каждой строке записывается два имени.
# Окончанием ввода служит пустая строка.

# Формат вывода
# выведите список всех людей и их «друзей 2-го уровня» в формате «Человек: Друг1, Друг2, ...».
# Список людей и друзей в каждой строке требуется вывести в алфавитном порядке без повторений.

one = dict()

# Составление списка друзей 1-го уровня в словарь one
while (text := input()) != "":
    names = text.split()
    one.setdefault(names[0], set()).add(names[1])
    one.setdefault(names[1], set()).add(names[0])

# Составление списка друзей 2-го уровня в словарь two
two = dict()
for key, value in one.items():
    two[key] = set()
    for val in value:
        two[key].update(one[val])

# Получаем все ключи для удаления
keys_to_remove = set(two.keys())

# Итеративное удаление повторений ключа в множестве
for key, value_set in two.items():
    # Удаляем ключ из множества
    value_set.discard(key)
# Итеративное удаление друзей 1-го уроня в множестве
for key, value_set in two.items():
    value_set -= one[key]

# Получение отсортированного списка ключей
sorted_keys = sorted(two.keys())

# Создание нового словаря для отсортированных данных
sorted_two = {}

# Для каждого ключа в отсортированном списке
for key in sorted_keys:
    # Получение отсортированного списка значений
    sorted_values = sorted(two[key])
    # Замена значения в новом словаре
    sorted_two[key] = sorted_values

# Вывод результата в требуемом формате
for key, value in sorted_two.items():
    print(f"{key}: {', '.join(value)}")
